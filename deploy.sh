#!/bin/bash

# Script de deployment para Easypanel
# Uso: ./deploy.sh [tag]

set -e

# Configuraci√≥n
IMAGE_NAME="valora-plus-frontend"
REGISTRY="your-registry.com"  # Cambiar por tu registry
DEFAULT_TAG="latest"

# Obtener tag del argumento o usar default
TAG=${1:-$DEFAULT_TAG}
FULL_IMAGE_NAME="$REGISTRY/$IMAGE_NAME:$TAG"

echo "üöÄ Iniciando deployment de Valora Plus Frontend..."
echo "üì¶ Imagen: $FULL_IMAGE_NAME"

# Construir la imagen
echo "üî® Construyendo imagen Docker..."
docker build -t $IMAGE_NAME:$TAG .
docker tag $IMAGE_NAME:$TAG $FULL_IMAGE_NAME

# Push al registry (opcional, comentado por defecto)
# echo "üì§ Subiendo imagen al registry..."
# docker push $FULL_IMAGE_NAME

echo "‚úÖ Build completado exitosamente!"
echo "üê≥ Para ejecutar localmente:"
echo "   docker run -p 80:80 $IMAGE_NAME:$TAG"
echo ""
echo "üìã Para deployment en Easypanel:"
echo "   1. Sube el c√≥digo a tu repositorio Git"
echo "   2. En Easypanel, crea una nueva aplicaci√≥n"
echo "   3. Conecta tu repositorio Git"
echo "   4. Easypanel detectar√° autom√°ticamente el Dockerfile"
echo "   5. IMPORTANTE: Configura las siguientes variables de entorno:"
echo "      - VITE_SUPABASE_URL=https://piynzvpnurnvbrmkyneo.supabase.co"
echo "      - VITE_SUPABASE_PUBLISHABLE_KEY=tu-clave-publica"
echo "      - VITE_SUPABASE_PROJECT_ID=piynzvpnurnvbrmkyneo"
echo "   6. Configura el puerto 80 en la configuraci√≥n de la app"
echo "   7. Las variables se pasar√°n autom√°ticamente como build args"